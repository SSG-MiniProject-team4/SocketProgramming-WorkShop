1. TCP 연결
2. 닉네임으로 연결해야하므로 닉네임 받아야함(필수) -> 접속 후 첫 메시지: NICK <이름>
- 조건: 공백/중복 닉네임 거절 -> 에러로 안내하고 연결 종료 가능
- 닉네임 성공적으로 얻으면 입장 "닉네임 joined" 알림

<필수기능>
1. 지정포트 = 5000
2. Ctrl+C, 예외 발생시 소켓 스레드 정리 후 종료
-> Runtime.getRuntime().addShutDownHook()에 thread interface 이용해서 람다식으로 구현
-> 예외 발생시에도 종료해야하므로 static 함수로 따로 구현하는게 나을듯

3. 멀티 클라이언트 처리-> threadPool로 처리해보자

4. broadcast : 한 사용자의 메시지를 모든 사용자에게 전달해야함 ...> 이거 어케 구현?? 생각해보자
5. 기본 명령 구현:
   - quit: 클라이언트 종료 -> 이건 client에서 close하면 될 듯, 그리고 map에서 client 정보 삭제해줘야함... 고유 번호 굳이 안바꿈..
   - who: 현재 접속자 목록 출력 -> 이건 threadPool로는 현재 접속자 정보를 얻어낼 수 없어서 LinkedList<String> 자료구조를 이용해서 관리해보자

6. 문자 인코딩 UTF-8으로 해줘야함(한글 입출력 제대로 하려면)
-> BufferedReader와 PrintWriter를 사용할건데, parameter로 StandardCharsets.UTF-8 넣어주기

<요구 사항>
1. 표준 라이브러리만 사용
2. console 기반
3. 한 클라이언트 문제로 서버 전체가 종료되면 안됨
4. 가독성/주석 처리 필수!!

<구현해야할 client story>
1. 학생 A: 프로그램을 실행하여 닉네임을 정하고, 다른 사용자와 대화하고 싶음
2. 학생 B: /who로 현재 접속자 목록을 실행해보기
3. 학생 C: /quit으로 깨끗하게 종료하기
4. 학생 D: 일어날 수 있는 예외 실행해보기 -> 내가 test한 부분

나머지는 notion보며 구현해보기
